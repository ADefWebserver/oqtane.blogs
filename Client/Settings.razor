@using Microsoft.Extensions.Localization

@namespace Oqtane.Blogs
@inherits ModuleBase
@inject ISettingService SettingService
@implements Oqtane.Interfaces.ISettingsControl
@inject IStringLocalizer<Edit> Localizer

<table class="table table-borderless">
    <tr>
        <td>
            <Label For="maxblogs" ResourceKey="MaximumBlogEntries" HelpText="Enter the maximum number of blogs to display on a page">Maximum Blog Entries: </Label>
        </td>
        <td>
            <input id="maxblogs" type="text" class="form-control" @bind="_maxblogs" />
        </td>
    </tr>
    <tr>
        <td>
            <Label For="summarylength" ResourceKey="SummaryLength" HelpText="Enter the maximum length of the blog to display in the summary view">Summary Length (Characters): </Label>
        </td>
        <td>
            <input id="summarylength" type="text" class="form-control" @bind="_summarylength" />
        </td>
    </tr>
</table>

@code {
    private string _maxblogs;
    private string _summarylength;

    protected override void OnInitialized()
    {
        try
        {
            _maxblogs = SettingService.GetSetting(ModuleState.Settings, "MaxBlogs", "20");
            _summarylength = SettingService.GetSetting(ModuleState.Settings, "SummaryLength", "500");
        }
        catch (Exception ex)
        {
            ModuleInstance.AddModuleMessage(ex.Message, MessageType.Error);
        }
    }

    public async Task UpdateSettings()
    {
        try
        {
            var settings = ModuleState.Settings;
            settings = SettingService.SetSetting(settings, "MaxBlogs", _maxblogs);
            settings = SettingService.SetSetting(settings, "SummaryLength", _summarylength);
            await SettingService.UpdateModuleSettingsAsync(settings, ModuleState.ModuleId);
        }
        catch (Exception ex)
        {
            ModuleInstance.AddModuleMessage(ex.Message, MessageType.Error);
        }
    }
}
